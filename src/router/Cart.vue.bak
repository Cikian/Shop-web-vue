<template>
  <van-nav-bar class="nav"
               title="鸟&nbsp;&nbsp巢&nbsp&nbsp市&nbsp&nbsp场"
               left-text="返回"
               left-arrow
               @click-left="onClickLeft"
  />


  <!--  全选按钮 -->

  <van-checkbox-group v-model="checkedResult" @change="checkedResultChange">
    <van-checkbox v-for="(good, index) in goods" :key="index" :name="good">
      <van-swipe-cell>
        <van-card
            :num="good.count"
            :price="good.price"
            :desc="good.subtitle"
            :title="good.name"
            class="goods-card"
            :thumb="good.mainImage"
            @click="toDetail(good.goodId)"
            style="width: 90vw"
        />
        <template #right>
          <van-button square text="移除" type="danger" class="delete-button" @click="deleteCartItem(good.goodId)"/>
        </template>
      </van-swipe-cell>
    </van-checkbox>
  </van-checkbox-group>


  <van-divider dashed>暂时没用更多</van-divider>

  <van-submit-bar :price="totalPrice" button-text="结算" @submit="onSubmit">
    <van-checkbox v-model=isCheckAll :indeterminate="isIndeterminate" @change="checkAllChange">全选</van-checkbox>
  </van-submit-bar>

</template>

<script>
import axios from "axios";
import list from "core-js/internals/array-iteration";
import {store} from "@/store";


export default {

  data() {
    return {
      totalPrice: 0,
      store,
      width: '450px',
      userInfo: {},
      goods: [],
      isCheckAll: false,
      checkedResult: [],
      isIndeterminate: false,
    }
  },
  mounted() {
    let that = this;
    that.checkedResult = [];
    if (that.store.isLogin === false) {
      that.$router.push("/login")
    } else {
      that.userInfo = JSON.parse(sessionStorage.getItem("userInfo"));
      that.loadData();
      console.log("session用户信息>>：" + that.userInfo.userId)
    }

    let screenW = window.screen.width; //屏幕的宽
    this.width = Math.floor(screenW) + 'px';
    console.log("屏幕宽度" + this.width)
    console.log("全选？"+that.isCheckAll)

  },
  methods: {
    checkAllChange(value) {
      this.checkedResult = value ? this.goods : [];
      this.isIndeterminate = false;
      console.log("222: " + this.checkedResult);
    },
    checkedResultChange(value) {
      let that = this;
      const goodsLength = that.goods.length;
      that.checkedResult = value;
      that.isCheckAll = value.length === goodsLength;
      that.isIndeterminate = value.length > 0 && value.length < goodsLength;
      // 总价等于当前总价加上选中的商品的价格乘以数量
      that.totalPrice = 0;
      for (let i = 0; i < that.checkedResult.length; i++) {
        that.totalPrice += that.checkedResult[i].price * that.checkedResult[i].count;
      }
      that.totalPrice *= 100;
      console.log("总价：" + this.totalPrice)


      console.log("111: " + this.checkedResult);

    },

    loadData() {
      let that = this;
      axios.get('/cart/' + that.userInfo.userId).then(function (res) {
        console.log(res);
        that.goods = res.data.data;
      }).catch(function (err) {
        console.log(err);
      })
    },
    onClickLeft() {
      this.$router.go(-1);
    },
    deleteCartItem(goodId) {
      let that = this
      console.log("删除购物车商品")
      axios.delete('/cart/' + that.userInfo.userId + '/' + goodId).then(function (res) {
        that.loadData()
        console.log(res);
      }).catch(function (err) {
        console.log(err);
      })
    },
    toDetail(goodId) {
      console.log("goodId: " + goodId)
      this.$router.push({path: "/detail", query: {goodId: goodId}})
    },

    onSubmit() {
      console.log("提交订单")
      // let that = this
      // axios.post('/order/' + that.userInfo.userId, that.checkedResult).then(function (res) {
      //   console.log(res);
      //   if (res.data.code === 8001) {
      //     that.$router.push({path: "/order", query: {orderId: res.data.data.orderId}})
      //   }
      // }).catch(function (err) {
      //   console.log(err);
      // })
    },

  },

  components: {}
}
</script>

<style>
#app {
  --van-checkbox-size: 20px;

}

.goods-card {
  margin: 0;
  width: 100%;
}

.delete-button {
  height: 100%;
}
</style>